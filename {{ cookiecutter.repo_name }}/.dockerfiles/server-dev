# Use a slim Python image.
# See https://hub.docker.com/_/python/tags for available tags
FROM python:{{ cookiecutter.python_version }}-slim-bookworm as builder

# Install project files in /var on the container.
WORKDIR /var

# Don't write .pyc files (to keep image small).
ENV PYTHONDONTWRITEBYTECODE 1

# Don't buffer output (so e.g. logs are immediately visible).
ENV PYTHONUNBUFFERED 1

RUN apt-get update && apt-get install -y \
    sudo \
    vim \
    wget \
    git \
    npm \
    locales \
    build-essential \
    python3-dev \
    python3-pip \
    binutils \
    gdal-bin \
    postgresql-{{ cookiecutter.postgresql_version }} \
    python3-psycopg2 \
    zlib1g-dev \
    openssh-server \
    gettext \
    libpq-dev \
    libssl-dev \
    libbz2-dev \
    libproj-dev \
    libcurl4-nss-dev \
    libreadline-dev \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libglib2.0 \
    libxrender1 \
    libffi-dev \
    liblzma-dev \
    rsync \
    && sed -i -e 's/# ja_JP.UTF-8 UTF-8/ja_JP.UTF-8 UTF-8/' /etc/locale.gen \
    && dpkg-reconfigure --frontend=noninteractive locales \
    && apt-get clean autoclean && apt-get autoremove -y && rm -rvf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Set lang
ENV LANG=ja_JP.UTF-8
ENV LC_ALL=ja_JP.UTF-8

# Install a custom ssh certificate
COPY .certificates/dev.pub /authorized_keys
RUN mkdir -p ~root/.ssh /var/run/sshd \
    && chmod 700 ~root/.ssh \
    && mv /authorized_keys ~root/.ssh/authorized_keys \
    && chmod 600 ~root/.ssh/authorized_keys

# Just copied
COPY .scripts/init.sh /root/init.sh
RUN chmod 755 /root/init.sh

# Install custom entry point script
COPY .scripts/entrypoint.sh /entrypoint.sh
# Install grunt and fix the permission, then insert required ENV into /etc/profile, upgrade pip
RUN chmod 755 /entrypoint.sh \
    && echo "export DB_HOST=postgresql" >> /etc/profile \
    && echo "export DJANGO_SETTINGS_MODULE={{ cookiecutter.python_package_name }}.settings.configuration.localhost" >> /etc/profile \
    && python3 -m pip install --upgrade --force-reinstall pip \
    && echo "export PYCURL_SSL_LIBRARY=nss" \
    && pip install pycurl --compile

VOLUME ["/var/{{ cookiecutter.repo_name }}", "/usr/local/lib/python{{ cookiecutter.python_short_version }}/dist-packages", "/root/.pycharm_helpers"]
EXPOSE 8000 22
ENTRYPOINT ["/entrypoint.sh"]
CMD ["/usr/sbin/sshd", "-D", "-f", "/etc/ssh/sshd_config"]