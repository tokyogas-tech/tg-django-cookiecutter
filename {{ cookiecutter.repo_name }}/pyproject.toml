##################
# build
##################
[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

##################
# poetry
##################
[virtualenvs]
create = true

[tool.poetry]
name = "{{ cookiecutter.service_name }}"
version = "1.0.0"
description = ""
authors = []
packages = [{ include = "{{ cookiecutter.python_package_name }}", from = "src" }]

[tool.poetry.dependencies]
bcrypt = "^4.0.0"
celery = "^5.3.4"
django = "^4.2.15"
envparse = "^0.2.0"
invoke = "^2.2.0"
psycopg2-binary = "^2.9.7"
python = "{{ cookiecutter.python_long_version }}"
python-dateutil = "^2.8.2"
pytz = "^2023.3.post1"
pyyaml = "^6.0.1"
structlog = "^24.0.0"

[tool.poetry.group.dev.dependencies]
black = "^23.10.0"
django-debug-toolbar = "^4.2.0"
django-extensions = "^3.2.3"
django-stubs = "^4.2.4"
django-stubs-ext = "^4.2.2"
django-webtest = "^1.9.11"
envparse-stubs = "^0.2.2"
factory-boy = "^3.3.0"
gunicorn = "^23.0.0"
mypy = "1.6.1"
myst-parser = "^2.0.0"
pre-commit = "^3.4.0"
pytest = "^8.0.0"
pytest-cov = "^4.1.0"
pytest-django = "^4.5.2"
pytest-mock = "^3.11.1"
pytest-pretty = "^1.2.0"
pytest-xdist = "^3.3.1"
ruff = "^0.6.0"
sphinx-copybutton = "^0.5.2"
sphinx-rtd-theme = "^2.0.0"
sphinx-tabs = "^3.4.1"
sphinxcontrib-django2 = "^1.9"
sphinxcontrib-mermaid = "^0.9.2"
sphinxcontrib-napoleon = "^0.7"

##################
# ruff
##################
[tool.ruff]
fix = true
lint.fixable = ["ALL"]
lint.ignore = ["A003", "D", "ERA001", "PLC2401", "PLC2403", "RUF001", "S101", "SIM103", "TCH001", "TCH002", "TCH003", "UP040"]
lint.select = ["ALL"]
lint.unfixable = ["ERA001", "F401"]
include = ["src/{{ cookiecutter.python_package_name }}/**/*.py", "src/tests/**/*.py"]
exclude = ["src/docs/**/*.py", "src/linters/**/*.py", "src/tasks/**/*.py", "src/{{ cookiecutter.python_package_name }}/**/migrations/*.py"]
target-version = "py{{ cookiecutter.python_short_version }}"

##################
# mypy
##################
[tool.mypy]
mypy_path = "$MYPY_CONFIG_FILE_DIR/src"
packages = ["{{ cookiecutter.python_package_name }}", "tests"]
plugins = [
    "mypy_django_plugin.main",
    "mypy_drf_plugin.main",
    "pydantic.mypy",
]
python_version = "{{ cookiecutter.python_version }}"

# Use strict defaults
strict = true
warn_unreachable = true
warn_no_return = true
ignore_missing_imports = true
disallow_untyped_decorators = false

[[tool.mypy.overrides]]
# Don't require invoke tasks to include types
module = "tasks.*"
disallow_untyped_defs = false
disallow_untyped_calls = false
disable_error_code = "attr-defined"

[[tool.mypy.overrides]]
# Don't require test functions to include types
module = "tests.*"
disallow_untyped_defs = false
disable_error_code = "attr-defined"

##################
# pytest
##################
[tool.pytest.ini_options]
python_paths = "./src/{{ cookiecutter.python_package_name }}"
testpaths = ["./src/tests/*"]

##################
# fixit linter
##################
[tool.fixit]
root = true
enable-root-import = "src"
disable = ["fixit.rules"]