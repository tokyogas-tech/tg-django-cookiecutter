[virtualenvs]
create = true
in-project = true

[tool.poetry]
name = "{{ cookiecutter.service_name }}"
version = "1.0.0"
description = ""
authors = []

[tool.pytest.ini_options]
python_paths = "./src/{{ cookiecutter.python_package_name }}"
testpaths = ["./src/tests/*"]

[tool.poetry.dependencies]
bcrypt = "^4.0.0"
celery = "^5.3.4"
django = "^4.1.11"
envparse = "^0.2.0"
invoke = "^2.2.0"
psycopg2-binary = "^2.9.7"
python = "{{ cookiecutter.python_long_version }}"
python-dateutil = "^2.8.2"
pytz = "^2023.3.post1"
pyyaml = "^6.0.1"

[tool.poetry.dev-dependencies]
black = "^23.10.0"
django-debug-toolbar = "^4.2.0"
django-extensions = "^3.2.3"
django-stubs = "^4.2.4"
django-stubs-ext = "^4.2.2"
django-webtest = "^1.9.11"
envparse-stubs = "^0.2.2"
factory-boy = "^3.3.0"
honcho = "^1.1.0"
mypy = "^1.6.0"
myst-parser = "^2.0.0"
pre-commit = "^3.4.0"
pytest = "^7.3.2"
pytest-cov = "^4.1.0"
pytest-django = "^4.5.2"
pytest-mock = "^3.11.1"
pytest-pretty = "^1.2.0"
pytest-xdist = "^3.3.1"
ruff = "^0.0.292"
sphinx-copybutton = "^0.5.2"
sphinx-rtd-theme = "^1.3.0"
sphinx-tabs = "^3.4.1"
sphinxcontrib-django2 = "^1.9"
sphinxcontrib-mermaid = "^0.9.2"
sphinxcontrib-napoleon = "^0.7"
structlog = "^24.0.0"

[tool.ruff]
select = [
  "A",      # prevent using keywords that clobber python builtins
  "B",      # bugbear: security warnings
  "E",      # pycodestyle
  "F",      # pyflakes
  "I",      # isort
  "W",      # warning
  "COM",    # commas
  "F401",   # unused-import
  "F402",   # import-shadowed-by-loop-var
  "F541",   # f-string without any placeholders
  "RUF013", # PEP 484 prohibits implicit Optional
  "RUF100", # Unused noqa directive
]
ignore = ["F403", "F404", "F405", "E501"]
include = ["./src/{{ cookiecutter.python_package_name }}/*.py"]
fix = true
fixable = ["ALL"]
target-version = "py{{ cookiecutter.python_short_version }}"

[tool.mypy]
files = "."
exclude = ["settings/"]
plugins = ["mypy_django_plugin.main"]
python_version = "{{ cookiecutter.python_version }}"

# Use strict defaults
strict = true
warn_unreachable = true
warn_no_return = true

[[tool.mypy.overrides]]
# Don't require test functions to include types
module = "tests.*"
allow_untyped_defs = true
ignore_missing_imports = true
disable_error_code = "attr-defined"

[tool.django-stubs]
django_settings_module = "{{ cookiecutter.python_package_name }}.settings.configuration.localhost"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
