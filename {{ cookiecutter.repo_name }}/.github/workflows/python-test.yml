name: Pytest
on: push
jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:{{ cookiecutter.postgresql_version }}
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: localhost
          POSTGRES_DB: {{ cookiecutter.database_name }}
        ports: ['5432:5432']
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python {{ cookiecutter.python_long_version }}
        uses: actions/setup-python@v5
        with:
          python-version: '{{ cookiecutter.python_long_version }}'
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry config virtualenvs.in-project true
          poetry install
      - name: Test with pytest
        env:
          DATABASE_URL: 'postgres://postgres:localhost@localhost:${{ job.services.postgres.ports[5432] }}/{{ cookiecutter.database_name }}'
        run: |
          source .venv/bin/activate
          cd src && DJANGO_SETTINGS_MODULE={{ cookiecutter.python_package_name }}.settings.configuration.localhost pytest